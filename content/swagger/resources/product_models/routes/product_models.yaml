get:
  summary: Get list of product models
  operationId: "get_product_models"
  tags:
    - Product models
  x-versions:
    - 2.0
  description: This endpoint allows you to get a list of product models. Product models are paginated.
  parameters:
    - $ref: '#/parameters/pagination_type'
    - $ref: '#/parameters/page'
    - $ref: '#/parameters/search_after'
    - $ref: '#/parameters/limit'
    - $ref: '#/parameters/with_count'
  responses:
    200:
      description: Return product models paginated
      schema:
        title: Product Models
        type: object
        allOf:
          - $ref: '#/definitions/Pagination'
          - properties:
              _embedded:
                type: object
                properties:
                  _items:
                    type: array
                    items:
                      $ref: '#/definitions/ProductModelList'
      examples: {
        "_links": {
          "self": {
            "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=qg%3D%3D"
          },
          "first": {
            "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3"
          },
          "next": {
            "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=rw%3D%3D"
          }
        },
        "_embedded": {
          "items": [
            {
              "_links": {
                "self": {
                  "href": "http:\/\/demo.akeneo.com\/api\/rest\/v1\/product-models\/shoes"
                }
              },
              "code": "shoes",
              "family_variant": "familyVariantA1",
              "parent": null,
              "categories": ["clothing", "shoes"],
              "values": {
                "price": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      {
                        "amount": "50.00",
                        "currency": "EUR"
                      }
                    ]
                  }
                ],
                "description": [
                  {
                    "locale": "en_US",
                    "scope": "ecommerce",
                    "data": "I like shoes!"
                  }
                ]
              },
              "created": "2017-10-04T18:04:10+02:00",
              "updated": "2017-10-04T18:04:10+02:00"
            },
            {
              "_links": {
                "self": {
                  "href": "http:\/\/demo.akeneo.com\/api\/rest\/v1\/product-models\/tshirt"
                }
              },
              "code": "tshirt",
              "family_variant": "familyVariantA1",
              "parent": null,
              "categories": ["clothing", "tshirt"],
              "values": {
                "price": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      {
                        "amount": "50.00",
                        "currency": "EUR"
                      }
                    ]
                  }
                ],
                "description": [
                  {
                    "locale": "en_US",
                    "scope": "ecommerce",
                    "data": "I like tshirt!"
                  }
                ]
              },
              "created": "2017-10-04T18:04:10+02:00",
              "updated": "2017-10-04T18:04:10+02:00"
            },
            {
              "_links": {
                "self": {
                  "href": "http:\/\/demo.akeneo.com\/api\/rest\/v1\/product-models\/trousers"
                }
              },
              "code": "trousers",
              "family_variant": "familyVariantA1",
              "parent": null,
              "categories": ["clothing", "trousers"],
              "values": {
                "price": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      {
                        "amount": "50.00",
                        "currency": "EUR"
                      }
                    ]
                  }
                ],
                "description": [
                  {
                    "locale": "en_US",
                    "scope": "ecommerce",
                    "data": "I like trousers!"
                  }
                ]
              },
              "created": "2017-10-04T18:04:10+02:00",
              "updated": "2017-10-04T18:04:10+02:00"
            }
          ]
        }
      }
    401:
      $ref: "#/responses/401Error"
    406:
      $ref: "#/responses/406Error"
    422:
      $ref: "#/responses/422Error"
post:
  summary: Create a new product model
  operationId: "post_product_models"
  tags:
    - Product models
  x-versions:
    - 2.0
  description: This endpoint allows you to create a new product model.
  parameters:
    - name: body
      in: body
      schema:
        $ref: "#/definitions/ProductModel"
  responses:
    201:
      $ref: "#/responses/Created"
    400:
      $ref: "#/responses/400Error"
    401:
      $ref: "#/responses/401Error"
    415:
      $ref: "#/responses/415Error"
    422:
      $ref: "#/responses/422Error"
patch:
  summary: Update/create several product models
  operationId: "patch_product_models"
  tags:
    - Product models
  x-versions:
    - 2.0
  description: This endpoint allows you to update and/or create several product models at once. Know more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no product models exists for the given code, it creates it. If you are using a v2.0 Enterprise Edition PIM, permissions based on your user groups are applied to the product models you try to update. It may result in the creation of drafts if you only have edit rights through the product model's categories.
  x-body-by-line: Contains several lines, each line is a product model in JSON standard format
  parameters:
    - name: body
      in: body
      schema:
        $ref: "#/definitions/ProductModel"
        x-examples:
          x-example-1:
            '{"code": "sub_sweat_option_a", "parent": "sweat", "values": {"a_simple_select": [{"locale": null, "scope": null, "data": "optionA"}]}}'
          x-example-2:
            '{"code": "sub_sweat_option_b", "parent": "sweat", "values": {"a_simple_select": [{"locale": null, "scope": null, "data": "optionA"}]}}'
          x-example-3:
            '{"code":"tshirt", "parent": "root_tshirt", "family_variant":"clothesvariant","values":{"description":[{"scope":"ecommerce","locale":"en_US","data":"My amazing tshirt"}]}}'
  responses:
    200:
      description: OK
      x-details: Returns a plain text response whose lines are JSON containing the status of each update or creation
      x-no-entity: true
      schema:
        $ref: "#/definitions/ErrorByLine"
      examples:
        x-example-1:
          '{"line":1,"code":"sub_sweat_option_a","status_code":204}'
        x-example-2:
          '{"line":2,"code":"sub_sweat_option_b","status_code":422,"message":"Validation failed.","errors":[{"property":"attribute","message":"Cannot set value \"Option A\" for the attribute axis \"a_simple_select\", as another sibling entity already has this value"}]}'
        x-example-3:
          '{"line":3,"code":"tshirt","status_code":201}'
    401:
      $ref: "#/responses/401Error"
    403:
      $ref: "#/responses/403Error"
    413:
      $ref: "#/responses/413Error"
    415:
      $ref: "#/responses/415ErrorStream"
